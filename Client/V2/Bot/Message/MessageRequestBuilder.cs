// <auto-generated/>
using KiotaPosts.Client.V2.Bot.Message.Aggregation;
using KiotaPosts.Client.V2.Bot.Message.Broadcast;
using KiotaPosts.Client.V2.Bot.Message.Delivery;
using KiotaPosts.Client.V2.Bot.Message.Item;
using KiotaPosts.Client.V2.Bot.Message.MarkAsRead;
using KiotaPosts.Client.V2.Bot.Message.Multicast;
using KiotaPosts.Client.V2.Bot.Message.Narrowcast;
using KiotaPosts.Client.V2.Bot.Message.Progress;
using KiotaPosts.Client.V2.Bot.Message.Push;
using KiotaPosts.Client.V2.Bot.Message.Quota;
using KiotaPosts.Client.V2.Bot.Message.Reply;
using KiotaPosts.Client.V2.Bot.Message.Validate;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace KiotaPosts.Client.V2.Bot.Message
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\bot\message
    /// </summary>
    public class MessageRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The aggregation property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Aggregation.AggregationRequestBuilder Aggregation
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Aggregation.AggregationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The broadcast property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Broadcast.BroadcastRequestBuilder Broadcast
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Broadcast.BroadcastRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The delivery property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Delivery.DeliveryRequestBuilder Delivery
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Delivery.DeliveryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The markAsRead property</summary>
        public KiotaPosts.Client.V2.Bot.Message.MarkAsRead.MarkAsReadRequestBuilder MarkAsRead
        {
            get => new KiotaPosts.Client.V2.Bot.Message.MarkAsRead.MarkAsReadRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The multicast property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Multicast.MulticastRequestBuilder Multicast
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Multicast.MulticastRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The narrowcast property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Narrowcast.NarrowcastRequestBuilder Narrowcast
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Narrowcast.NarrowcastRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The progress property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Progress.ProgressRequestBuilder Progress
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Progress.ProgressRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The push property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Push.PushRequestBuilder Push
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Push.PushRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The quota property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Quota.QuotaRequestBuilder Quota
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Quota.QuotaRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reply property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Reply.ReplyRequestBuilder Reply
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Reply.ReplyRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The validate property</summary>
        public KiotaPosts.Client.V2.Bot.Message.Validate.ValidateRequestBuilder Validate
        {
            get => new KiotaPosts.Client.V2.Bot.Message.Validate.ValidateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the KiotaPosts.Client.v2.bot.message.item collection</summary>
        /// <param name="position">Message ID of video or audio</param>
        /// <returns>A <see cref="KiotaPosts.Client.V2.Bot.Message.Item.WithMessageItemRequestBuilder"/></returns>
        public KiotaPosts.Client.V2.Bot.Message.Item.WithMessageItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("messageId", position);
                return new KiotaPosts.Client.V2.Bot.Message.Item.WithMessageItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="KiotaPosts.Client.V2.Bot.Message.MessageRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MessageRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/bot/message", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="KiotaPosts.Client.V2.Bot.Message.MessageRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MessageRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/bot/message", rawUrl)
        {
        }
    }
}

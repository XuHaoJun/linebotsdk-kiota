// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace KiotaPosts.Client.Models
{
    #pragma warning disable CS1591
    public class FlexBoxLinearGradient : KiotaPosts.Client.Models.FlexBoxBackground, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The angle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Angle { get; set; }
#nullable restore
#else
        public string Angle { get; set; }
#endif
        /// <summary>The centerColor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CenterColor { get; set; }
#nullable restore
#else
        public string CenterColor { get; set; }
#endif
        /// <summary>The centerPosition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CenterPosition { get; set; }
#nullable restore
#else
        public string CenterPosition { get; set; }
#endif
        /// <summary>The endColor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndColor { get; set; }
#nullable restore
#else
        public string EndColor { get; set; }
#endif
        /// <summary>The startColor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartColor { get; set; }
#nullable restore
#else
        public string StartColor { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="KiotaPosts.Client.Models.FlexBoxLinearGradient"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new KiotaPosts.Client.Models.FlexBoxLinearGradient CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new KiotaPosts.Client.Models.FlexBoxLinearGradient();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "angle", n => { Angle = n.GetStringValue(); } },
                { "centerColor", n => { CenterColor = n.GetStringValue(); } },
                { "centerPosition", n => { CenterPosition = n.GetStringValue(); } },
                { "endColor", n => { EndColor = n.GetStringValue(); } },
                { "startColor", n => { StartColor = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("angle", Angle);
            writer.WriteStringValue("centerColor", CenterColor);
            writer.WriteStringValue("centerPosition", CenterPosition);
            writer.WriteStringValue("endColor", EndColor);
            writer.WriteStringValue("startColor", StartColor);
        }
    }
}

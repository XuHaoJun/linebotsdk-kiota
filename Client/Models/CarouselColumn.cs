// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace KiotaPosts.Client.Models
{
    /// <summary>
    /// Column object for carousel template.
    /// </summary>
    public class CarouselColumn : IAdditionalDataHolder, IParsable
    {
        /// <summary>The actions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<KiotaPosts.Client.Models.ActionObject>? Actions { get; set; }
#nullable restore
#else
        public List<KiotaPosts.Client.Models.ActionObject> Actions { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Action</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public KiotaPosts.Client.Models.ActionObject? DefaultAction { get; set; }
#nullable restore
#else
        public KiotaPosts.Client.Models.ActionObject DefaultAction { get; set; }
#endif
        /// <summary>The imageBackgroundColor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageBackgroundColor { get; set; }
#nullable restore
#else
        public string ImageBackgroundColor { get; set; }
#endif
        /// <summary>The text property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Text { get; set; }
#nullable restore
#else
        public string Text { get; set; }
#endif
        /// <summary>The thumbnailImageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThumbnailImageUrl { get; set; }
#nullable restore
#else
        public string ThumbnailImageUrl { get; set; }
#endif
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="KiotaPosts.Client.Models.CarouselColumn"/> and sets the default values.
        /// </summary>
        public CarouselColumn()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="KiotaPosts.Client.Models.CarouselColumn"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static KiotaPosts.Client.Models.CarouselColumn CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new KiotaPosts.Client.Models.CarouselColumn();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actions", n => { Actions = n.GetCollectionOfObjectValues<KiotaPosts.Client.Models.ActionObject>(KiotaPosts.Client.Models.ActionObject.CreateFromDiscriminatorValue)?.ToList(); } },
                { "defaultAction", n => { DefaultAction = n.GetObjectValue<KiotaPosts.Client.Models.ActionObject>(KiotaPosts.Client.Models.ActionObject.CreateFromDiscriminatorValue); } },
                { "imageBackgroundColor", n => { ImageBackgroundColor = n.GetStringValue(); } },
                { "text", n => { Text = n.GetStringValue(); } },
                { "thumbnailImageUrl", n => { ThumbnailImageUrl = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<KiotaPosts.Client.Models.ActionObject>("actions", Actions);
            writer.WriteObjectValue<KiotaPosts.Client.Models.ActionObject>("defaultAction", DefaultAction);
            writer.WriteStringValue("imageBackgroundColor", ImageBackgroundColor);
            writer.WriteStringValue("text", Text);
            writer.WriteStringValue("thumbnailImageUrl", ThumbnailImageUrl);
            writer.WriteStringValue("title", Title);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}

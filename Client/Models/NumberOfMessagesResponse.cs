// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace KiotaPosts.Client.Models
{
    #pragma warning disable CS1591
    public class NumberOfMessagesResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Aggregation process status. One of:`ready`: The number of messages can be obtained.`unready`: We haven&apos;t finished calculating the number of sent messages for the specified in date. For example, this property is returned when the delivery date or a future date is specified. Calculation usually takes about a day.`unavailable_for_privacy`: The total number of messages on the specified day is less than 20.`out_of_service`: The specified date is earlier than the date on which we first started calculating sent messages (March 31, 2018).</summary>
        public KiotaPosts.Client.Models.NumberOfMessagesResponse_status? Status { get; set; }
        /// <summary>The number of messages delivered using the phone number on the date specified in `date`.The response has this property only when the value of `status` is `ready`.</summary>
        public long? Success { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="KiotaPosts.Client.Models.NumberOfMessagesResponse"/> and sets the default values.
        /// </summary>
        public NumberOfMessagesResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="KiotaPosts.Client.Models.NumberOfMessagesResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static KiotaPosts.Client.Models.NumberOfMessagesResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new KiotaPosts.Client.Models.NumberOfMessagesResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "status", n => { Status = n.GetEnumValue<KiotaPosts.Client.Models.NumberOfMessagesResponse_status>(); } },
                { "success", n => { Success = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<KiotaPosts.Client.Models.NumberOfMessagesResponse_status>("status", Status);
            writer.WriteLongValue("success", Success);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}

// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace KiotaPosts.Client.Models
{
    #pragma warning disable CS1591
    public class AgeDemographicFilter : KiotaPosts.Client.Models.DemographicFilter, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The gte property</summary>
        public KiotaPosts.Client.Models.AgeDemographic? Gte { get; set; }
        /// <summary>The lt property</summary>
        public KiotaPosts.Client.Models.AgeDemographic? Lt { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="KiotaPosts.Client.Models.AgeDemographicFilter"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new KiotaPosts.Client.Models.AgeDemographicFilter CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new KiotaPosts.Client.Models.AgeDemographicFilter();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "gte", n => { Gte = n.GetEnumValue<KiotaPosts.Client.Models.AgeDemographic>(); } },
                { "lt", n => { Lt = n.GetEnumValue<KiotaPosts.Client.Models.AgeDemographic>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<KiotaPosts.Client.Models.AgeDemographic>("gte", Gte);
            writer.WriteEnumValue<KiotaPosts.Client.Models.AgeDemographic>("lt", Lt);
        }
    }
}
